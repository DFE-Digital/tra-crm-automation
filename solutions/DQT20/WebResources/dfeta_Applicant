var DFE;
(function (dfe) {
    (function (dqt) {
        (function (webResources) {
            (function (applicant) {
                applicant.HideBPF = function (executionContext) {
                    if (executionContext != null) {
                        var formContext = executionContext.getFormContext();
                        if (formContext.getControl("processid")) {
                            var processId = formContext.getAttribute("processid").getValue();
                            if (processId != null) {
                                formContext.ui.process.setVisible(false);
                            }
                        }
                    }
                }

                applicant.Form_OnLoad = function (executionContext) {
                    if (executionContext != null & executionContext != undefined) {
                        applicant.CheckForDeclinedApplication(executionContext, true);
                    }
                }

                applicant.Form_OnSave = function (executionContext) {
                    if (executionContext != null & executionContext != undefined) {
                        applicant.CheckForDeclinedApplication(executionContext, false);
                    }
                }

                applicant.CheckForDeclinedApplication = function (executionContext, onLoad) {

                    if (executionContext != null & executionContext != undefined) {
                        var formContext = executionContext.getFormContext();
                        var saveMode = 0;
                        var applicantId = Xrm.Page.data.entity.getId();

                        if (!onLoad) {

                            saveMode = executionContext.getEventArgs().getSaveMode();

                            if (saveMode == 6) { //Reactivated
                                formContext.ui.clearFormNotification("DeclineReasonMessage");
                                return;
                            }
                        }

                        var applicantEntity = getWebAPIData("leads", "statecode,statuscode", "leadid eq " + applicantId, "");

                        if (applicantEntity != null && applicantEntity.value.length > 0) {
                            var stateCode = applicantEntity.value[0]['statecode'];
                            var statusCode = applicantEntity.value[0]['statuscode'];

                            //Check the applicant record is disqualified and declined
                            if ((stateCode == 2 && statusCode == 4) || saveMode == 15) {

                                var MRApplicationEntity = getWebAPIData("dfeta_mrapplications", "_dfeta_declinereason1_value", "_dfeta_applicantid_value eq " + applicantId, "");

                                if (MRApplicationEntity != null && MRApplicationEntity.value.length > 0) {
                                    var declineReason = MRApplicationEntity.value[0]['_dfeta_declinereason1_value'];

                                    //Check mandatory Decline Reason 1 is completed when the applicant is declined.
                                    if (declineReason == null) {
                                        var displayText = "Warning - Decline reason 1 field is not populated";
                                        var alertStrings = { confirmButtonLabel: "Ok", text: displayText, title: "Warning" };
                                        var alertOptions = { height: 120, width: 260 };
                                        Xrm.Navigation.openAlertDialog(alertStrings, alertOptions);

                                        formContext.ui.setFormNotification(
                                            displayText,
                                            "WARNING",
                                            "DeclineReasonMessage"
                                        );
                                    }
                                    else {
                                        formContext.ui.clearFormNotification("DeclineReasonMessage");
                                    }
                                }
                            }
                        }
                    }
                }

                function getWebAPIData(sEntityName, sColumns, sFilter, sOrderBy) {
                    var globalContext = Xrm.Utility.getGlobalContext();
                    var serverUrl = globalContext.getClientUrl();
                    var OData_Endpoint = "/api/data/v9.2";
                    var fullUrl = serverUrl + OData_Endpoint + "/" + sEntityName + "?";

                    if (sColumns) {
                        fullUrl += "$select=" + sColumns;
                    }
                    if (sFilter) {
                        fullUrl += "&$filter=" + sFilter;
                    }
                    if (sOrderBy) {
                        fullUrl += "&$orderby=" + sOrderBy;
                    }

                    try {
                        var retrieveRecordsReq = new XMLHttpRequest();
                        retrieveRecordsReq.open("GET", fullUrl, false);
                        retrieveRecordsReq.setRequestHeader("OData-MaxVersion", "4.0");
                        retrieveRecordsReq.setRequestHeader("OData-Version", "4.0");
                        retrieveRecordsReq.setRequestHeader("Accept", "application/json");
                        retrieveRecordsReq.setRequestHeader("Content-Type", "application/json; charset=utf-8");
                        retrieveRecordsReq.send();

                        var data = JSON.parse(retrieveRecordsReq.responseText);

                        return data;
                    }
                    catch (ex) {
                        var alertStrings = { confirmButtonLabel: "Ok", text: "Error: getWebAPIData - Data Set =" + sEntityName + "; select = " + sColumns + "; filter = " + sFilter + "; Error = " + ex.message, title: "Error" };
                        var alertOptions = { height: 120, width: 260 };
                        Xrm.Navigation.openAlertDialog(alertStrings, alertOptions);
                    }
                }

            })(webResources.Applicant = webResources.Applicant || {});
        })(dqt.WebResources = dqt.WebResources || {});
    })(dfe.Dqt = dfe.Dqt || {});
})(DFE = DFE || {});
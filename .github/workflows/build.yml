name: Build

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'CRM environment from where you want to export solution'
        required: true
        default: Build
        type: environment
      solution_name:
        description: 'CRM solution you want to export and import'
        required: true
        default: DummyforCICD
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder:
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: solutions

jobs:
  export:
    name: Export
    runs-on: windows-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
    - name: gitConfig
      run: |
        git config --global core.longpaths true

    - uses: actions/checkout@v2

    - uses: Azure/login@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: DfE-Digital/keyvault-yaml-secret@v1.0.1
      id: CRM
      with:
        keyvault: ${{ secrets.KEYVAULT_NAME }}
        secret: CRM
        key: CRM_URL, CRM_APP_ID, CRM_APP_SECRET, CRM_TENANT_ID

    - name: Export unmanaged solution
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: ${{ steps.CRM.outputs.CRM_URL }}
        app-id: ${{ steps.CRM.outputs.CRM_APP_ID  }}
        client-secret: ${{ steps.CRM.outputs.CRM_APP_SECRET  }}
        tenant-id: ${{ steps.CRM.outputs.CRM_TENANT_ID  }}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip

    - name: Unpack unmanaged solution
      uses: microsoft/powerplatform-actions/unpack-solution@v0
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@0.4.0
      with:
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true

